<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bmpWood.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAABdGlDQ1BrQ0dDb2xvclNwYWNlRGlzcGxh
        eVAzAAAoz32QsUsCYRjGH60QyoaowaHhpmi4SjTIpUENpAg6rCBrOs9TA70+7i7CaIvWEPoPMmgOGpII
        g5aGhiBqiKityamgpeTr/e4utKHej5fvx8PzvLy8gD+kMlbqBlA2bDOdSkgrmVUp8AofPadUzWJxRZkX
        /PP/ro8H13s3JmY1W7X92F7qqnx6sbD9GJrA/9Wb0y2N/i/qsMZMG/DJxMqWzQTvEA+ZtBRxVXDB5SPB
        WZfPHM9SOkl8QyxpRTVH3CSWsx16oYPLpU3N20FsH9SN5UUxh3oYM1iHBYYSVFQgQUH0D/+k409ig9wV
        mJQroAibMnFSxASdeBYGNIxDJo4gTB0Rd/bud+/dT25ruy/AdINzft7W5hrAyRSdrN7WRmPAQB9wXWeq
        qTpSF7U/nwfejoH+DDB4S5k1Kx+NuNsHE0DPM+fvI0DgAGhVOf885LxVo/ATcGl8AxcparxcU0/FAAAA
        CXBIWXMAABRNAAAUTQGUyo0vAAAA9ElEQVRoQ+3WwQ0CIRCFYTrdEizAgyXo1Q6swBq8eLMfzGwyySxC
        wiKbeTOZw5cgYMx/AEnPy5I9SO/7OffiL9XWtA2HfB7XVblHS4SgiRA0EQJ32F+3U+7FITTmkHKPluEQ
        NH6eKLVJi3YddiQcwJ8T0s2zhwyhBj8h5QYrZAiJEG0RguYnxNX1W3u7oOMQGq8h5QYrZAiJRyOaza3F
        k3LOimYIHSBLN5r/EGsiBE2EoGmGmLu1Wu8XDpHryJoh1sSjEc3msB+Nf7S29i+1kNm3YoSMkCGzRciI
        COng57DX/u6PwiE05pByzyi1kNmcPFGW/AVMPWKSgYGXLwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="picGirl.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        racAAAAASUVORK5CYII=
</value>
  </data>
</root>