<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bmpWood.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAABdGlDQ1BrQ0dDb2xvclNwYWNlRGlzcGxh
        eVAzAAAoz32QsUsCYRjGH60QyoaowaHhpmi4SjTIpUENpAg6rCBrOs9TA70+7i7CaIvWEPoPMmgOGpII
        g5aGhiBqiKityamgpeTr/e4utKHej5fvx8PzvLy8gD+kMlbqBlA2bDOdSkgrmVUp8AofPadUzWJxRZkX
        /PP/ro8H13s3JmY1W7X92F7qqnx6sbD9GJrA/9Wb0y2N/i/qsMZMG/DJxMqWzQTvEA+ZtBRxVXDB5SPB
        WZfPHM9SOkl8QyxpRTVH3CSWsx16oYPLpU3N20FsH9SN5UUxh3oYM1iHBYYSVFQgQUH0D/+k409ig9wV
        mJQroAibMnFSxASdeBYGNIxDJo4gTB0Rd/bud+/dT25ruy/AdINzft7W5hrAyRSdrN7WRmPAQB9wXWeq
        qTpSF7U/nwfejoH+DDB4S5k1Kx+NuNsHE0DPM+fvI0DgAGhVOf885LxVo/ATcGl8AxcparxcU0/FAAAA
        CXBIWXMAABRNAAAUTQGUyo0vAAAA9ElEQVRoQ+3WwQ0CIRCFYTrdEizAgyXo1Q6swBq8eLMfzGwyySxC
        wiKbeTOZw5cgYMx/AEnPy5I9SO/7OffiL9XWtA2HfB7XVblHS4SgiRA0EQJ32F+3U+7FITTmkHKPluEQ
        NH6eKLVJi3YddiQcwJ8T0s2zhwyhBj8h5QYrZAiJEG0RguYnxNX1W3u7oOMQGq8h5QYrZAiJRyOaza3F
        k3LOimYIHSBLN5r/EGsiBE2EoGmGmLu1Wu8XDpHryJoh1sSjEc3msB+Nf7S29i+1kNm3YoSMkCGzRciI
        COng57DX/u6PwiE05pByzyi1kNmcPFGW/AVMPWKSgYGXLwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="picGirl.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>